#set(CPACK_DEBIAN_PACKAGE_DEBUG ON)

set(MAJOR_VERSION @MAJOR_VERSION@)
set(MINOR_VERSION @MINOR_VERSION@)
set(PATCH_VERSION @PATCH_VERSION@)

set(DEB_VERSION ${MAJOR_VERSION}.${MINOR_VERSION}.${PATCH_VERSION})

#get arch

execute_process(COMMAND dpkg --print-architecture OUTPUT_VARIABLE DEB_ARCH)
string(REGEX REPLACE "(\r?\n)+$" "" DEB_ARCH "${DEB_ARCH}")

#set common variables
set(CPACK_TOPLEVEL_TAG ${DEB_ARCH})

set(CPACK_PACKAGE_CONTACT "Furmur Michael <michael.f@didww.com>")
set(CPACK_PACKAGE_VENDOR "yeti")
set(CPACK_DEBIAN_PACKAGE_SECTION "net")
set(CPACK_DEBIAN_PACKAGE_ARCHITECTURE "${DEB_ARCH}")

set(CPACK_PACKAGE_VERSION_MAJOR ${MAJOR_VERSION})
set(CPACK_PACKAGE_VERSION_MINOR ${MINOR_VERSION})
set(CPACK_PACKAGE_VERSION_PATCH ${PATCH_VERSION})
set(PACKAGE_FILE_NAME_SUFFIX _${DEB_VERSION}_${CPACK_DEBIAN_PACKAGE_ARCHITECTURE})

set(INSTALL_HEADERS "@TARGET_HEADERS@")
set(INSTALL_PKGCFGS "@TARGET_PKGCFGS@")
set(INSTALL_CMAKE_MODULES "@TARGET_CMAKE_MODULES@")

#disable shlibdeps for non-binary packages
if(INSTALL_LIBS OR INSTALL_BINS)
	#we have at least one binary in package
	message(STATUS "enable shlibdeps")
	set(CPACK_DEBIAN_PACKAGE_SHLIBDEPS ON)
else(INSTALL_LIBS OR INSTALL_BINS)
	message(STATUS "disable shlibdeps")
	set(CPACK_DEBIAN_PACKAGE_SHLIBDEPS OFF)
endif(INSTALL_LIBS OR INSTALL_BINS)

#apply package specific control files
set(CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA ${CONTROL_FILES})


#install actions

install(FILES ${INSTALL_HEADERS} DESTINATION "@HDRS_DIR@")
install(FILES ${INSTALL_PKGCFGS} DESTINATION "@PKGCFG_DIR@")
install(FILES ${INSTALL_CMAKE_MODULES} DESTINATION "@SHARED_DIR@")
